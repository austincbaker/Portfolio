// Your Name
// Your ID
// CMPS 359 Android Programming
// Programming Assignment : #1
// Due Date :9/17/2020
// Program Description: This program allows a user to see a random math problem on demand and attempt to solve it.
// Certificate of Authenticity:
// I certify that the code of this project other than any code provided in the instructions or
// generated by the IDE for this assignment, is entirely my own work.

package com.example.a359proj1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.EditText
import androidx.core.content.res.TypedArrayUtils.getText
import kotlinx.android.synthetic.main.activity_main.*
import kotlin.random.Random

class MainActivity : AppCompatActivity() {

    private var changeEqButton = true;


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        newEquationButton.setOnClickListener(){
            userInput.hint = "Click New Equation To Start!"
            changeEquation()
        }
    }

    fun generateOperaand(): Int {
        var randop = Random.nextInt(0, 4)
        return randop
    }

    fun generateNums(operand: Int): Int {
        var numberImposs = -0
        when (operand) {
            0, 1 -> {
                return Random.nextInt(-100, 100)
            }
            2, 3 -> {
                return Random.nextInt(-10, 10)
            }
        }
        return numberImposs
    }

    fun displayAnswer(compAnswer: Double) {
        displayAnswer.text = "The answer is: $compAnswer"
    }

    fun answer(numOne: Int, operatorValue: Int, numTwo: Int): Double {
        return when (operatorValue) {
            0 -> (((numOne) + (numTwo).toDouble()))
            1 -> ((numOne) - (numTwo).toDouble())
            2 -> ((numOne) * (numTwo).toDouble())
            3 -> ((numOne) / (numTwo).toDouble())
            else -> -99999999.9
        }
    }

    fun operatorChange(operatorValue: Int): Char {
        return when (operatorValue) {
            0 -> '+'
            1 -> '-'
            2 -> '*'
            3 -> '/'
            else -> 'z'
        }
    }

    fun changeEquation() {
        if (changeEqButton) {
            displayAnswer.text = ""
            userInput.hint = "Enter your Answer Here"
            var operand = generateOperaand()
            var numberOne = generateNums(operand)
            var numberTwo = generateNums(operand)

            firstNum.text = numberOne.toString()
            operator.text = operatorChange(operand).toString()
            secondNum.text = numberTwo.toString()

            checkAnswer.setOnClickListener {
                displayAnswer(answer(numberOne, operand, numberTwo))

            }

            /*fun answerCheckButton(view: View) {
        val number = changeEquation(view)
        //changeEqButton = true
        answerCheck(number)
        //checkAnsButton = false
    }*/
        }
    }
}
