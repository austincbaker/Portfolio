// Your Name
// Your ID
// CMPS 359 Android Programming
// Programming Assignment : #1
// Due Date :9/17/2020
// Program Description: This program allows a user to see a random math problem on demand and attempt to solve it.
// Certificate of Authenticity:
// I certify that the code of this project other than any code provided in the instructions or
// generated by the IDE for this assignment, is entirely my own work.

package com.example.a359proj1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.GestureDetector
import android.view.View
import kotlinx.android.synthetic.main.activity_main.*
import android.view.MotionEvent
import androidx.core.view.GestureDetectorCompat
import kotlin.math.max
import kotlin.math.min
import kotlin.random.Random

class MainActivity : AppCompatActivity(), GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener {

    private var changeEqButton = true;
    var gestureDetector: GestureDetectorCompat? = null


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        View.OnClickListener {
            this.gestureDetector = GestureDetectorCompat(this,this)
            gestureDetector?.setOnDoubleTapListener(this)
            userInput.hint = "Click New Equation To Start!"
            changeEquation()
        }
    }

    override fun onResume() {
        super.onResume()
        changeEquation()
    }

    fun View.toggleVisibility() {
        if (textView.visibility == View.VISIBLE) {
            textView.visibility = View.INVISIBLE
        } else {
            textView.visibility = View.VISIBLE
        }
    }

    override fun onTouchEvent(event: MotionEvent?): Boolean {
        this.gestureDetector?.onTouchEvent(event)
        return super.onTouchEvent(event)
    }

    fun clear() {
        userInput.text.clear()
        displayAnswer.text = " "
    }

    fun generateOperaand(): Int {
        var randop = Random.nextInt(0, 4)
        return randop
    }

    fun generateNums(operand: Int): Int {
        var numberImposs = -0
        when (operand) {
            0, 1 -> {
                return Random.nextInt(-100, 100)
            }
            2, 3 -> {
                return Random.nextInt(-10, 10)
            }
        }
        return numberImposs
    }

    fun displayAnswerFunct(compAnswer: Double, userAnswer: Double) {
        if (userAnswer.equals(compAnswer)) {
            displayAnswer.text = "Correct!"
        } else {
            var difference = max(compAnswer, userAnswer) - min(compAnswer, userAnswer)
            if (difference < 0.00000000000000000001) {
                displayAnswer.text = "Correct!"
            } else {
                displayAnswer.text = "Incorrect! The answer is: $compAnswer"
            }
        }
    }


    fun answer(numOne: Int, operatorValue: Int, numTwo: Int): Double {
        return when (operatorValue) {
            0 -> (((numOne) + (numTwo).toDouble()))
            1 -> ((numOne) - (numTwo).toDouble())
            2 -> ((numOne) * (numTwo).toDouble())
            3 -> ((numOne) / (numTwo).toDouble())
            else -> -99999999.9
        }
    }

    fun operatorChange(operatorValue: Int): Char {
        return when (operatorValue) {
            0 -> '+'
            1 -> '-'
            2 -> '*'
            3 -> '/'
            else -> 'z'
        }
    }

    fun changeEquation() {
        if (changeEqButton) {

            displayAnswer.text = ""
            userInput.hint = "Enter your Answer Here"
            var operand = generateOperaand()
            var numberOne = generateNums(operand)
            var numberTwo = generateNums(operand)

            firstNum.text = numberOne.toString()
            operator.text = operatorChange(operand).toString()
            secondNum.text = numberTwo.toString()

            mathButton.setOnClickListener {
                textView.toggleVisibility()
            }

            newEquationButton.setOnClickListener{
                changeEquation()
            }

            checkAnswer.setOnClickListener {
                var UI = userInput.text.toString().toDouble()
                displayAnswerFunct(answer(numberOne, operand, numberTwo), UI)
            }

            clear()
        }
    }

    override fun onShowPress(p0: MotionEvent?) {

    }

    override fun onSingleTapUp(p0: MotionEvent?): Boolean {
        return true
    }

    override fun onDown(p0: MotionEvent?): Boolean {
        return true
    }

    override fun onFling(p0: MotionEvent?, p1: MotionEvent?, p2: Float, p3: Float): Boolean {
        changeEquation()
        return true
    }

    override fun onScroll(p0: MotionEvent?, p1: MotionEvent?, p2: Float, p3: Float): Boolean {
        return true
    }

    override fun onLongPress(p0: MotionEvent?) {


    }

    override fun onDoubleTap(p0: MotionEvent?): Boolean {
        return true
    }

    override fun onDoubleTapEvent(p0: MotionEvent?): Boolean {
        return true
    }

    override fun onSingleTapConfirmed(p0: MotionEvent?): Boolean {
        return true
    }


}
